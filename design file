module traffic(
input clk,
output reg [2:0] light,
output reg clk_out
);
reg [24:0] count=0;
always@(posedge clk)
begin
     if(count == 25000000-1)
     begin
          clk_out<=~clk_out;
          count<=0;
     end
     else
           count<=count+1;
end
reg [1:0] state=0;
reg [5:0] count1=0;
always@( posedge clk_out)
begin
     case(state)
     2'b00:
          if(count1==30)
            begin
              state<=2'b01;
              count1<=0;
            end
          else
            begin
              count1<=count1+1;
            end
     2'b01:
          state<=2'b10;
     2'b10:
          state<=2'b00;
     endcase
end

always@(*)
begin
      case(state)
      2'b00:
            light=3'b001;//green
      2'b01:
            light=3'b010;//yellow
      2'b10:
            light=3'b100;//red
      endcase
end
endmodule
      


